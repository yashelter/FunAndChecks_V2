@page "/login"
@using AdminUI.Services
@inject AuthService AuthService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<MudPaper Class="pa-4" Elevation="3">
    <MudForm @ref="_form">
        <MudTextField T="string" Label="Имя пользователя (Telegram)" @bind-Value="_username" Required="true" />
        <MudTextField T="string" Label="Пароль" @bind-Value="_password" InputType="InputType.Password" Required="true" />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4" OnClick="HandleLogin">Войти</MudButton>
    </MudForm>
</MudPaper>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <MudAlert Severity="Severity.Error" Class="mt-4">@_errorMessage</MudAlert>
}

@code {
    private MudForm _form;
    private string _username;
    private string _password;
    private string _errorMessage;

    private async Task HandleLogin()
    {
        _errorMessage = string.Empty;
        await _form.Validate();
        if (!_form.IsValid)
        {
            return;
        }

        var success = await AuthService.LoginAsync(_username, _password);
        if (success)
        {
            ((JwtAuthenticationStateProvider)AuthStateProvider).NotifyUserAuthentication();
            NavigationManager.NavigateTo("/queues");
        }
        else
        {
            _errorMessage = "Ошибка входа. Проверьте логин или пароль.";
        }
    }
}